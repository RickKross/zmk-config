/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define TRI     3

/ {
    combos {
        compatible = "zmk,combos";

        combo_enter {
            bindings = <&kp RET>;
            key-positions = <46 47>;
            layers = <0>;
        };

        combo_mute {
            bindings = <&kp C_MUTE>;
            key-positions = <21 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESC TAB  &kp Q      &kp W     &kp E     &kp R  &kp T  &kp UP         &kp C_VOL_UP  &kp Y  &kp U  &kp I     &kp O      &kp P      &kp BSPC
&kp LSHFT    &kp A      &kp S     &kp D     &kp F  &kp G  &kp DOWN       &kp C_VOL_DN  &kp H  &kp J  &kp K     &kp L      &kp SEMI   &kp SQT
&kp LCTRL    &kp SLASH  &kp Z     &kp X     &kp C  &kp V  &kp LG(SPACE)                &kp B  &kp N  &kp M     &kp COMMA  &kp DOT    &kp MINUS
&kp GRAVE    &none      &kp LGUI  &kp LALT         &mo 1  &kp SPACE      &kp SPACE     &mo 2         &kp RALT  &kp LEFT   &kp RIGHT  &kp LGUI
            >;
        };

        left_layer {
            bindings = <
&trans  &none  &kp F1  &kp F2   &kp F3   &kp F4   &kp PRINTSCREEN  &none      &kp KP_PLUS   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MULTIPLY  &kp BACKSPACE
&trans  &none  &kp F5  &kp F6   &kp F7   &kp F8   &kp C_MENU       &none      &kp KP_MINUS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DIVIDE    &kp EQUAL
&trans  &none  &kp F9  &kp F10  &kp F11  &kp F12  &none                       &none         &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT       &kp MINUS
&trans  &none  &none   &trans            &trans   &kp ENTER        &kp ENTER  &trans                         &kp KP_NUMBER_0  &none            &none            &none
            >;
        };

        right_layer {
            bindings = <
&trans    &kp N1  &kp N2     &kp N3     &kp N4     &kp N5     &kp DEL    &kt BACKSPACE  &kp PG_UP      &none     &kp UP    &none      &kp LBKT   &kp RBKT
&trans    &kp N6  &kp N7     &kp N8     &kp N9     &kp N0     &kp INS    &none          &kp PG_DN      &kp LEFT  &kp DOWN  &kp RIGHT  &kp COLON  &kp EQUAL
&trans    &none   &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(A)                 &kp LG(SPACE)  &kp HOME  &none     &kp END    &none      &kp MINUS
&kp LWIN  &none   &none      &trans                &trans     &kp ENTER  &kp ENTER      &trans                   &none     &none      &none      &kp BACKSLASH
            >;
        };

        tri_layer {
            bindings = <
&none   &kp N1        &kp N2        &kp N3        &kp N4      &kp N5  &none           &none  &kp N6  &kp N7  &kp N8  &kp N9      &kp N0       &kp BACKSPACE
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &none   &none           &none  &none   &none   &none   &none       &none        &none
&trans  &bootloader   &sys_reset    &none         &none       &none   &kp CLCK               &none   &none   &none   &sys_reset  &bootloader  &none
&trans  &none         &none         &trans                    &trans  &kp KP_NUMLOCK  &none  &trans          &none   &none       &none        &none
            >;
        };

        numbers {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans  &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
